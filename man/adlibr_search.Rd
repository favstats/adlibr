% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adlibr.R
\name{adlibr_search}
\alias{adlibr_search}
\title{Search Ads Across Platforms}
\usage{
adlibr_search(
  platform,
  q = NULL,
  advertisers = NULL,
  countries = NULL,
  date_from = NULL,
  date_to = NULL,
  types = NULL,
  languages = NULL,
  media = NULL,
  limit = 100,
  page_token = NULL,
  fields = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{platform}{Character. Platform to search ("meta", "tiktok", "microsoft",
"apple", "amazon", "google", "booking", "pinterest", "snapchat", "x")}

\item{q}{Character. Keyword search terms (optional)}

\item{advertisers}{Character vector. Advertiser names or IDs to filter by (optional)}

\item{countries}{Character vector. ISO 3166-1 alpha-2 country codes (optional)}

\item{date_from}{Character or Date. Start date (YYYY-MM-DD format, optional)}

\item{date_to}{Character or Date. End date (YYYY-MM-DD format, optional)}

\item{types}{Character vector. Ad types to filter by (platform-specific, optional)}

\item{languages}{Character vector. ISO 639-1 language codes (optional)}

\item{media}{Character. Media type filter (optional)}

\item{limit}{Integer. Maximum number of results per page (default: 100)}

\item{page_token}{Character. Pagination token for next page (optional)}

\item{fields}{Character vector. Specific fields to retrieve (optional)}

\item{...}{Additional platform-specific parameters}
}
\value{
tibble. Normalized ad data with the following columns:
\describe{
\item{ad_id}{Platform ad identifier}
\item{platform}{Source platform}
\item{advertiser_id}{Advertiser identifier}
\item{advertiser_name}{Advertiser display name}
\item{payer}{Entity that paid for the ad}
\item{beneficiary}{Beneficiary entity}
\item{status}{Ad status (ACTIVE/INACTIVE/etc.)}
\item{first_seen}{First shown date}
\item{last_seen}{Last shown date}
\item{ad_text}{Ad text content}
\item{media_type}{Type of media (image/video/etc.)}
\item{media_urls}{List of media asset URLs}
\item{landing_url}{Destination URL}
\item{countries}{List of target countries}
\item{languages}{List of languages}
\item{spend_range}{Spending range (if available)}
\item{impressions_range}{Impression range}
\item{eu_reach}{EU-specific reach data}
\item{targeting_age}{Age targeting criteria}
\item{targeting_gender}{Gender targeting}
\item{targeting_locations}{Location targeting}
\item{targeting_other}{Other targeting criteria}
\item{extra_json}{Raw platform-specific data}
\item{fetched_at}{Data retrieval timestamp}
}
}
\description{
Search for advertisements across supported ad library platforms using
unified parameters. This function automatically handles platform-specific
API differences, authentication, pagination, and data normalization.
}
\examples{
\dontrun{
# Search Meta ads for "climate change" in US and Canada
meta_ads <- adlibr_search("meta", 
                         q = "climate change",
                         countries = c("US", "CA"),
                         date_from = "2024-01-01",
                         limit = 50)

# Search TikTok ads by advertiser
tiktok_ads <- adlibr_search("tiktok",
                           advertisers = "Example Corp",
                           countries = "US")

# Search across multiple platforms (requires separate calls)
platforms <- c("meta", "tiktok", "microsoft")
all_ads <- purrr::map_df(platforms, ~adlibr_search(.x, q = "election"))
}
}
